name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review

jobs:
  nox:
    strategy:
      matrix:
        os: [ubuntu-latest] #[ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.10','3.11', '3.12']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4 # Use v4 for compatibility with pyproject.toml
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install llvmpipe and lavapipe for offscreen canvas
        run: |
          sudo apt-get update -y -qq
          sudo apt-get install --no-install-recommends -y \
            ffmpeg \
            libegl1 \
            libopengl0 \
            libgl1-mesa-dri \
            libxcb-xfixes0-dev \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxkbcommon-x11-0 \
            libglib2.0-0 \
            mesa-vulkan-drivers \
            libdbus-1-3 \
            libxcb-cursor0 \
            libxcb-randr0 \
            x11-utils \
            xvfb

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install ".[dev]"
      - name: Generate video and audio samples
        run: |
          python tests/generate_numbered_video.py
          python tests/generate_noise_audio.py
      - name: Generate Screenshots
#        env:
#          PYTHONPATH: ${{ github.workspace }}
        run: |
          python tests/generate_screenshots.py --type all --path tests/screenshots
      - name: Run nox
        run: |
          nox --no-venv -s linters
      - name: Test examples
        env:
          PYGFX_WGPU_ADAPTER_NAME: llvmpipe
          PYGFX_EXPECT_LAVAPIPE: true
          DISPLAY: ':99.0'
        run: |
          # Start a virtual X11 display server (Xvfb) for headless GUI testing
          # This allows Qt applications to run without a physical display in CI
          xvfb-run -s "-screen 0 1920x1200x24 +extension GLX" pytest -v tests/

      - name: Upload test images on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-screenshots
          path: /tmp/*.png

  check:
    if: always()
    needs: nox
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether all tests and notebooks succeeded
        uses: re-actors/alls-green@v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}


